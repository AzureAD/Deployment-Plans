{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": ""
        },
        "resourcegroup": {
            "type": "string",
            "defaultValue": ""
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": ""
        },
        "workspace": {
            "type": "string",
            "defaultValue": ""
        },
        "workspaceapiversion": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "resources": [
        {
            "apiVersion": "[parameters('workspaceapiversion')]",
            "name": "[parameters('workspace')]",
            "type": "Microsoft.OperationalInsights/workspaces",
            "location": "[parameters('location')]",
            "id": "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourcegroup'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]",
            "resources": [
                {
                    "apiVersion": "2015-11-01-preview",
                    "name": "Azure AD Account Provisioning Events",
                    "type": "views",
                    "location": "[parameters('location')]",
                    "id": "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourcegroup'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspace'),'/views/Azure AD Account Provisioning Events')]",
                    "dependson": [
                        "[Concat('/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourcegroup'), '/providers/Microsoft.OperationalInsights/workspaces/', parameters('workspace'))]"
                    ],
                    "properties": {
                        "Id": "Azure AD Account Provisioning Events",
                        "Name": "Azure AD Account Provisioning Events",
                        "Author": null,
                        "Source": "Local",
                        "Version": 2,
                        "Dashboard": [
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "New users provisioned",
                                        "newGroup": true,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Successful add operations",
                                        "Subtitle": "Account provisioning"
                                    },
                                    "LineChart": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"success\" | mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportAdd\" | summarize toint(count()) by bin(TimeGenerated, 1h)",
                                        "Callout": {
                                            "Title": "Total successful adds",
                                            "Series": "",
                                            "Operation": "Sum"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "Count",
                                                "baseUnit": "Ones",
                                                "displayUnit": "AUTO"
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"success\" | mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportAdd\" | mvexpand TargetResources | extend appName = tostring(TargetResources.displayName) | where appName !contains \"@\" | summarize toint(count()) by appName",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "ColumnsTitle": {
                                            "Name": "App",
                                            "Value": "Add Operations"
                                        },
                                        "Color": "#55d455",
                                        "operation": "Sum",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"success\"         | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) == \"EntryExportAdd\"     | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"success\"         | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) == \"EntryExportAdd\"     | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "New users provisioned",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Failed add operations",
                                        "Subtitle": "Account Provisioning"
                                    },
                                    "LineChart": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | extend appName = tostring(TargetResources.displayName) | mvexpand AdditionalDetails | where appName !contains \"@\" and appName !contains \"Self-Service\" and appName !contains \"whatever\" and AdditionalDetails.value == \"EntryExportAdd\" and Result contains \"failure\" | summarize count() by bin(TimeGenerated, 1h)",
                                        "Callout": {
                                            "Title": "Total failed adds",
                                            "Series": "",
                                            "Operation": "Sum"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\" | mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportAdd\" | mvexpand TargetResources | extend appName = tostring(TargetResources.displayName) | where appName !contains \"@\" and appName !contains \"Self-Service\" and appName !contains \"whatever\"    | summarize count() by appName",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "ColumnsTitle": {
                                            "Name": "App",
                                            "Value": "Count"
                                        },
                                        "Color": "#e81123",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"failure\"       | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) == \"EntryExportAdd\"     | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"failure\"       | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) == \"EntryExportAdd\"     | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Users Updated",
                                        "newGroup": true,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Successful update operations",
                                        "Subtitle": "Account Provisioning"
                                    },
                                    "LineChart": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"success\" | mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportUpdate\"  | summarize count() by bin(TimeGenerated, 1h)",
                                        "Callout": {
                                            "Title": "Total successful updates",
                                            "Series": "",
                                            "Operation": "Sum"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"success\" | mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportUpdate\"  | mvexpand TargetResources | extend appName = tostring(TargetResources.displayName) | where appName !contains \"@\" | summarize count() by appName",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "ColumnsTitle": {
                                            "Name": "App",
                                            "Value": "Count"
                                        },
                                        "Color": "#55d455",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let baseData = materialize( AuditLogs | where OperationName == \"Export\" | where Result contains \"success\"| order by TimeGenerated desc | extend rn = row_number() ); let AuditLogsExpanded = materialize( baseData | mvexpand AdditionalDetails ); let entities = (){ AuditLogsExpanded | where tostring(AdditionalDetails.key) == \"JoiningProperty\" | project rn, entity = AdditionalDetails.value }; let userIds = (){ AuditLogsExpanded | where tostring(AdditionalDetails.value) == \"EntryExportUpdate\" | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName) | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1) | project rn, appName }; baseData | join kind=leftouter ( entities ) on rn | join kind=leftouter ( userIds ) on rn | where {selected item} | project-away rn, rn1, rn2",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let baseData = materialize( AuditLogs | where OperationName == \"Export\" | where Result contains \"success\"| order by TimeGenerated desc | extend rn = row_number() ); let AuditLogsExpanded = materialize( baseData | mvexpand AdditionalDetails ); let entities = (){ AuditLogsExpanded | where tostring(AdditionalDetails.key) == \"JoiningProperty\" | project rn, entity = AdditionalDetails.value }; let userIds = (){ AuditLogsExpanded | where tostring(AdditionalDetails.value) == \"EntryExportUpdate\" | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName) | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1) | project rn, appName }; baseData | join kind=leftouter ( entities ) on rn | join kind=leftouter ( userIds ) on rn | where {selected item} | project-away rn, rn1, rn2"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Users updated",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Failed update operations",
                                        "Subtitle": "Account provisioning"
                                    },
                                    "LineChart": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\"| mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportUpdate\"  | summarize count() by bin(TimeGenerated, 1h)",
                                        "Callout": {
                                            "Title": "Total failed updates",
                                            "Series": "",
                                            "Operation": "Sum"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\" | mvexpand AdditionalDetails | where AdditionalDetails.value == \"EntryExportUpdate\"  | mvexpand TargetResources | extend appName = tostring(TargetResources.displayName) | where appName !contains \"@\" | summarize count() by appName",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "ColumnsTitle": {
                                            "Name": "App",
                                            "Value": "Count"
                                        },
                                        "Color": "#e81123",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let baseData = materialize( AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\" | order by TimeGenerated desc | extend rn = row_number() ); let AuditLogsExpanded = materialize( baseData | mvexpand AdditionalDetails ); let entities = (){ AuditLogsExpanded | where tostring(AdditionalDetails.key) == \"JoiningProperty\" | project rn, entity = AdditionalDetails.value }; let userIds = (){ AuditLogsExpanded | where tostring(AdditionalDetails.value) == \"EntryExportUpdate\" | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName) | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1) | project rn, appName }; baseData | join kind=leftouter ( entities ) on rn | join kind=leftouter ( userIds ) on rn | where {selected item} | project-away rn, rn1, rn2",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let baseData = materialize( AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\" | order by TimeGenerated desc | extend rn = row_number() ); let AuditLogsExpanded = materialize( baseData | mvexpand AdditionalDetails ); let entities = (){ AuditLogsExpanded | where tostring(AdditionalDetails.key) == \"JoiningProperty\" | project rn, entity = AdditionalDetails.value }; let userIds = (){ AuditLogsExpanded | where tostring(AdditionalDetails.value) == \"EntryExportUpdate\" | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName) | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1) | project rn, appName }; baseData | join kind=leftouter ( entities ) on rn | join kind=leftouter ( userIds ) on rn | where {selected item} | project-away rn, rn1, rn2"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Users De-provisioned",
                                        "newGroup": true,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Successful delete operations",
                                        "Subtitle": "Account Provisioning"
                                    },
                                    "LineChart": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"success\" | mvexpand AdditionalDetails | where AdditionalDetails.value in (\"EntryExportDelete\", \"EntryExportUpdateSoftDelete\") | summarize count() by bin(TimeGenerated, 1h)",
                                        "Callout": {
                                            "Title": "Total successful deletes",
                                            "Series": "",
                                            "Operation": "Sum"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"success\" | mvexpand AdditionalDetails | where AdditionalDetails.value in (\"EntryExportDelete\", \"EntryExportUpdateSoftDelete\") | mvexpand TargetResources | extend appName = tostring(TargetResources.displayName) | where appName !contains \"@\" | summarize count() by appName",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "ColumnsTitle": {
                                            "Name": "App",
                                            "Value": "Count"
                                        },
                                        "Color": "#55d455",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"success\"         | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) in( \"EntryExportDelete\", \"EntryExportUpdateSoftDelete\")    | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"success\"         | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) in( \"EntryExportDelete\", \"EntryExportUpdateSoftDelete\")    | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2"
                                        }
                                    }
                                }
                            },
                            {
                                "Id": "LineChartCalloutBuilderBlade",
                                "Type": "Blade",
                                "Version": 0,
                                "Configuration": {
                                    "General": {
                                        "title": "Users de-provisioned",
                                        "newGroup": false,
                                        "icon": "",
                                        "useIcon": false
                                    },
                                    "Header": {
                                        "Title": "Failed delete operations",
                                        "Subtitle": "Account provisioning"
                                    },
                                    "LineChart": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\" | mvexpand AdditionalDetails | where AdditionalDetails.value in (\"EntryExportDelete\", \"EntryExportUpdateSoftDelete\") | summarize count() by bin(TimeGenerated, 1h)",
                                        "Callout": {
                                            "Title": "Total failed deletes",
                                            "Series": "",
                                            "Operation": "Sum"
                                        },
                                        "yAxis": {
                                            "isLogarithmic": false,
                                            "units": {
                                                "baseUnitType": "",
                                                "baseUnit": "",
                                                "displayUnit": ""
                                            },
                                            "customLabel": ""
                                        },
                                        "NavigationSelect": {}
                                    },
                                    "List": {
                                        "Query": "AuditLogs | where OperationName == \"Export\" | where Result contains \"failure\" | mvexpand AdditionalDetails | where AdditionalDetails.value in (\"EntryExportDelete\", \"EntryExportUpdateSoftDelete\") | mvexpand TargetResources | extend appName = tostring(TargetResources.displayName) | where appName !contains \"@\" | summarize count() by appName",
                                        "HideGraph": false,
                                        "enableSparklines": true,
                                        "ColumnsTitle": {
                                            "Name": "App",
                                            "Value": "Count"
                                        },
                                        "Color": "#e81123",
                                        "thresholds": {
                                            "isEnabled": false,
                                            "values": [
                                                {
                                                    "name": "Normal",
                                                    "threshold": "Default",
                                                    "color": "#009e49",
                                                    "isDefault": true
                                                },
                                                {
                                                    "name": "Warning",
                                                    "threshold": "60",
                                                    "color": "#fcd116",
                                                    "isDefault": false
                                                },
                                                {
                                                    "name": "Error",
                                                    "threshold": "90",
                                                    "color": "#ba141a",
                                                    "isDefault": false
                                                }
                                            ]
                                        },
                                        "NameDSVSeparator": "",
                                        "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"failure\"         | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) in( \"EntryExportDelete\", \"EntryExportUpdateSoftDelete\")    | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2",
                                        "NavigationSelect": {
                                            "NavigationQuery": "let baseData = materialize(     AuditLogs     | where OperationName == \"Export\"     | where Result contains \"failure\"         | order by TimeGenerated desc      | extend rn = row_number()  ); let AuditLogsExpanded = materialize(     baseData     | mvexpand AdditionalDetails ); let entities = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.key) == \"JoiningProperty\"     | project rn, entity = AdditionalDetails.value }; let userIds = (){     AuditLogsExpanded     | where tostring(AdditionalDetails.value) in( \"EntryExportDelete\", \"EntryExportUpdateSoftDelete\")    | extend dn1 = tostring(TargetResources[0].displayName), dn2 = tostring(TargetResources[1].displayName)     | extend appName = iff(dn1 contains \"@\", iff(dn2 contains \"@\", \"N/A\", dn2), dn1)     | project rn, appName }; baseData | join kind=leftouter (     entities ) on rn | join kind=leftouter (     userIds ) on rn | where {selected item} | project-away rn, rn1, rn2"
                                        }
                                    }
                                }
                            }
                        ],
                        "Filters": [],
                        "OverviewTile": {
                            "Id": "SingleQueryDonutBuilderTileV1",
                            "Type": "OverviewTile",
                            "Version": 2,
                            "Configuration": {
                                "Donut": {
                                    "Query": "AuditLogs | where OperationName == \"Export\" | extend resultVerbose = iff(Result==1, \"Failure\", \"Success\") | summarize count() by resultVerbose",
                                    "CenterLegend": {
                                        "Text": "Total",
                                        "Operation": "Sum",
                                        "ArcsToSelect": []
                                    },
                                    "Options": {
                                        "colors": [
                                            "#00188f",
                                            "#0072c6",
                                            "#00bcf2"
                                        ],
                                        "valueColorMapping": [
                                            {
                                                "value": "Success",
                                                "color": "#007233"
                                            },
                                            {
                                                "value": "Failure",
                                                "color": "#ba141a"
                                            }
                                        ]
                                    }
                                },
                                "Advanced": {
                                    "DataFlowVerification": {
                                        "Enabled": false,
                                        "Query": "search * | limit 1 | project TimeGenerated",
                                        "Message": ""
                                    }
                                }
                            }
                        }
                    }
                }
            ]
        }
    ]
}